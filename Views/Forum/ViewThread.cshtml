@using Forum.ViewModels
@model ViewThreadViewModel
@{
    var thread = Model.Thread;
    ViewData["Title"] = thread.Title;
}

<h2>Forum Thread</h2>

<div class="container mt-4">
    <!-- Thread Details -->
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">@thread.Title</h5>
            <small class="text-light">
                Category: @thread.Group.Name |
                Posted by: @thread.Author?.UserName
                on @thread.DateCreated.ToString("MMMM dd, yyyy")
                at @thread.DateCreated.ToString("hh:mmtt")
            </small>
            @if (thread.DateLastEdited != null)
            {
                <div>
                    <small class="text-light">
                        Last edited on @thread.DateLastEdited?.ToString("MMMM dd, yyyy")
                        at @thread.DateLastEdited?.ToString("hh:mmtt")
                    </small>
                </div>
            }
        </div>
        <div class="card-body">
            <!-- Replace newlines with breaks for HTML rendering -->
            <p>@Html.Raw(thread.Content.Replace("\n", "<br />"))</p>
        </div>

        <!-- Only show thread controls if signed in user is thread author -->
        @if (Model.Thread.AuthorId == Model.SignedInUserId)
        {
            <div class="card-footer text-end">
                <!-- Edit button -->
                <a asp-controller="Forum" asp-action="EditThread" asp-route-threadId="@thread.Id" class="btn btn-warning btn-sm me-2">
                    Edit Thread
                </a>
                <!-- Delete button -->
                <form asp-controller="Forum" asp-action="DeleteThread" method="post" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this thread?');">
                    <input type="hidden" name="threadId" value="@thread.Id" />
                    <button type="submit" class="btn btn-danger btn-sm">Delete Thread</button>
                </form>
            </div>
        }        
    </div>

    <!-- Replies Section -->
    <h4>Replies</h4>
    @if (thread.Replies != null && thread.Replies.Any())
    {
        <div class="list-group mb-4">
            @foreach (var reply in thread.Replies)
            {
                <div class="list-group-item">
                    <div class="d-flex justify-content-between">
                        <h6 class="mb-1">@reply.Author?.UserName</h6>
                        <small>@reply.DateCreated.ToString("MMMM dd, yyyy HH:mm")</small>
                    </div>                    
                    <!-- Replace newlines with breaks for HTML rendering -->
                    <p class="mb-1">@Html.Raw(reply.Content.Replace("\n", "<br />"))</p>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info">No replies yet. Be the first to reply!</div>
    }

    <!-- Reply Form -->
    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <h5 class="mb-0">Add a Reply</h5>
        </div>
        <div class="card-body">
            <form asp-controller="Forum" asp-action="AddReply" method="post">
                <!-- Add hidden field for ThreadId -->
                <input type="hidden" asp-for="@Model.ThreadId" value="@thread.Id" />

                <!-- Reply content -->
                <div class="form-group mb-3">
                    <label class="form-label" asp-for="@Model.ReplyContent">Your Reply</label>
                    <textarea class="form-control" asp-for="@Model.ReplyContent" rows="5" placeholder="Write your reply here..."></textarea>
                </div>

                <!-- Submit button -->
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary">Post Reply</button>
                </div>
            </form>
        </div>
    </div>
</div>